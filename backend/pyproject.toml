[tool.poetry]
name = "backend"
version = "0.1.0"
description = ""
authors = ["Shahar Band <shahar1531@gmail.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
uvicorn = "^0.30.1"
fastapi = "^0.111.0"
beanie = "^1.26.0"
python-multipart = "^0.0.7"
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
pydantic = "^2.7.3"
bcrypt = "4.0.1" # Pin bcrypt until passlib supports the latest
pydantic-settings = "^2.3.1"
pyjwt = "^2.8.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
ruff = "^0.4.8"
setuptools = "70.0.0"
pytest-asyncio = "^0.23.7"
trio = "^0.25.1"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "B904",  # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true
